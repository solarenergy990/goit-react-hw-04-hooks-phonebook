{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsList/ContactsLIst.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","components/App/App.js","index.js","components/ContactsList/ContactListItem/ContactListItem.module.css"],"names":["module","exports","ContactForm","state","name","number","handleChange","evt","target","value","setState","handleSubmit","preventDefault","onSubmit","props","reset","this","className","s","label","labelText","type","pattern","title","required","onChange","input","button","Component","ContactListItem","contactName","contactNumber","onClickRemove","listItem","listText","onClick","ContactsList","contacts","onContactDelete","children","map","contact","id","Filter","defaultProps","App","initialContacts","filter","addContact","data","shortid","generate","toLowerCase","includes","alert","prevState","deleteContact","contactId","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ba0433f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__E55oc\",\"input\":\"Filter_input__31n5t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactsLIst_contacts__1JG4b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__2cr40\",\"labelText\":\"ContactForm_labelText__eMbXU\",\"input\":\"ContactForm_input__2awrW\",\"button\":\"ContactForm_button__xInKn\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n  };\n\n  handleChange = evt => {\n    const { name, value } = evt.target;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n\n    const { onSubmit } = this.props;\n\n    onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div>\n        <form className=\"form\" onSubmit={this.handleSubmit}>\n          <div className=\"form-container\">\n            <label className={s.label}>\n              <p className={s.labelText}>Name</p>\n              <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                required\n                onChange={this.handleChange}\n                value={name}\n                className={s.input}\n              />\n            </label>\n            <label className={s.label}>\n              <p className={s.labelText}>Number</p>\n              <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleChange}\n                value={number}\n                className={s.input}\n              />\n            </label>\n            <button type=\"submit\" className={s.button}>\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactListItem.module.css';\n\nconst ContactListItem = ({ contactName, contactNumber, onClickRemove }) => {\n  return (\n    <li className={s.listItem}>\n      <p className={s.listText}>\n        {contactName} : {contactNumber}\n      </p>\n      <button type=\"button\" className={s.button} onClick={onClickRemove}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onClickRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactListItem from '../ContactsList/ContactListItem/ContactListItem';\nimport s from './ContactsLIst.module.css';\n\nconst ContactsList = ({ contacts, onContactDelete, children }) => {\n  return (\n    <div className={s.contacts}>\n      {children}\n      <ul>\n        {contacts.map(contact => {\n          const { id, name, number } = contact;\n\n          return (\n            <ContactListItem\n              key={id}\n              contactName={name}\n              contactNumber={number}\n              onClickRemove={() => onContactDelete(id)}\n            />\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n\nContactsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onContactDelete: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      <p className={s.label}>Find contacts by name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      ></input>\n    </label>\n  );\n};\n\nexport default Filter;\n\nFilter.defaultProps = {\n  value: '',\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactsList from '../ContactsList/ContactsList';\nimport Filter from '../Filter/Filter';\nimport initialContacts from '../../contacts.json';\nimport shortid from 'shortid';\n\nclass App extends Component {\n  state = {\n    contacts: initialContacts,\n    filter: '',\n  };\n\n  addContact = data => {\n    const { name, number } = data;\n    const { contacts } = this.state;\n\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    const checkedContactNames = contacts.map(contact => {\n      return contact.name.toLowerCase();\n    });\n\n    if (!checkedContactNames.includes(name.toLowerCase())) {\n      this.setState(prevState => ({\n        contacts: [...prevState.contacts, contact],\n      }));\n    } else {\n      alert(`${name} is already in contacts`);\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = evt => {\n    this.setState({ filter: evt.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactsList\n          contacts={visibleContacts}\n          onContactDelete={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactListItem_listItem__2DHKS\",\"listText\":\"ContactListItem_listText__3mmZc\",\"button\":\"ContactListItem_button__LDXm3\"};"],"sourceRoot":""}